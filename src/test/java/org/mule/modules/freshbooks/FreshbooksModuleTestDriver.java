/**
 * Mule Freshbooks Connector
 *
 * Copyright (c) MuleSoft, Inc.  All rights reserved.  http://www.mulesoft.com
 *
 * The software in this package is published under the terms of the CPAL v1.0
 * license, a copy of which has been included with this distribution in the
 * LICENSE.txt file.
 */

/**
 * This file was automatically generated by the Mule Cloud Connector Development Kit
 */
package org.mule.modules.freshbooks;

import org.junit.BeforeClass;
import org.junit.Test;
import org.mule.modules.freshbooks.model.Callback;
import org.mule.modules.freshbooks.model.Category;
import org.mule.modules.freshbooks.model.Client;
import org.mule.modules.freshbooks.model.Invoice;
import org.mule.modules.freshbooks.model.Line;

public class FreshbooksModuleTestDriver
{
    private static FreshbooksModule module;
    
    @BeforeClass
    public static void init()
    {
        module = new FreshbooksModule();
        module.setApiUrl("https://mulesofttest.freshbooks.com/api/2.1/xml-in");
        module.setAuthenticationToken("4d8a62a53ec1b3426a625abd039babd9");
        module.init();
    }

    @Test
    public void createACategoryAndDeleteIt()
    {
        Category cat =  new Category();
        cat.setName("MegaMarket3");
        
        Category category = module.createCategory(cat);
        module.deleteCategory(category);
    }

    @Test
    public void createClientAndDeleteIt(String id) {
        Client client = new Client();
        client.setFirstName("Test FB - " + id);
        client.setLastName("Last Name - Test");
        client.setOrganization("ABC INC");
        client.setEmail(String.format("test-FB-%s@test.com", id));
        Client newClient = module.createClient(client);
        module.deleteClient(newClient);
    }

    @Test
    public void createInvoiceAndDeleteIt() {
        Invoice invoice = new Invoice();
        invoice.setClientId("10");
        Line line = new Line();
        line.setQuantity(1);
        line.setUnitCost(Double.valueOf(4));
        invoice.getLines().add(line);
        Invoice newInvoice = module.createInvoice(invoice);
        module.deleteInvoice(newInvoice);
    }

    @Test
    public void createCallbackAndDeleteIt() {
        Callback callback = new Callback();
        callback.setEvent("invoice.update");
        callback.setUri("http://example2.com");
        
        Callback newCallback = module.createCallback(callback);
        module.deleteCallback(newCallback);
    }

    @Test
    public void verifyCallback() {
        Callback callback = new Callback();
        callback.setId("1");
        callback.setVerifier("123123123");
        
        module.verifyCallback(callback);
    }
}
