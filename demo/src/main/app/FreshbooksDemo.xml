<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:context="http://www.springframework.org/schema/context" xmlns:freshbooks="http://www.mulesoft.org/schema/mule/freshbooks" xmlns:data-mapper="http://www.mulesoft.org/schema/mule/ee/data-mapper" xmlns:scripting="http://www.mulesoft.org/schema/mule/scripting" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:spring="http://www.springframework.org/schema/beans" xmlns:core="http://www.mulesoft.org/schema/mule/core" xmlns:debugger="http://www.mulesoft.org/schema/mule/debugger" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="EE-3.3.0" xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd 
http://www.mulesoft.org/schema/mule/freshbooks http://www.mulesoft.org/schema/mule/freshbooks/1.0/mule-freshbooks.xsd 
http://www.mulesoft.org/schema/mule/ee/data-mapper http://www.mulesoft.org/schema/mule/ee/data-mapper/current/mule-data-mapper.xsd 
http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd 
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd 
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd 
http://www.mulesoft.org/schema/mule/debugger http://www.mulesoft.org/schema/mule/debugger/current/mule-debugger.xsd 
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd ">
    <freshbooks:config name="Freshbooks" apiUrl="${apiUrl}" authenticationToken="${authToken}" doc:name="Freshbooks"/>
    <data-mapper:config name="Category" transformationGraphPath="category.grf" doc:name="Category"/>
    <data-mapper:config name="Client" transformationGraphPath="client.grf" doc:name="Client"/>
    <data-mapper:config name="Invoice" transformationGraphPath="invoice.grf" doc:name="Invoice"/>
    <context:property-placeholder location="mule.properties"/>
    <flow name="Freshbooks_category" doc:name="Freshbooks_category">
        <http:inbound-endpoint exchange-pattern="one-way" host="localhost" port="8081" path="category" doc:name="HTTP"/>
        <scripting:transformer doc:name="Groovy">
            <scripting:script engine="Groovy">
                <scripting:text><![CDATA[import org.mule.modules.freshbooks.model.*

new WCategory(
	category: new Category(
				name: "New FB Test Category"
)
)]]></scripting:text>
            </scripting:script>
        </scripting:transformer>
        <freshbooks:create-category config-ref="Freshbooks" doc:name="Freshbooks"/>
        <data-mapper:transform config-ref="Category" doc:name="DataMapper"/>
        <freshbooks:update-category config-ref="Freshbooks" doc:name="Freshbooks"/>
        <message-properties-transformer overwrite="true" scope="invocation" doc:name="Category properties">
            <add-message-property key="CategoryId" value="#[payload.category.id]"/>
            <add-message-property key="CategoryName" value="#[payload.category.name]"/>
        </message-properties-transformer>
        <freshbooks:delete-category config-ref="Freshbooks" doc:name="Freshbooks"/>
        <logger message="Category #[groovy:message.getInvocationProperty('categoryId')] #[groovy:message.getInvocationProperty('categoryName')] created and deleted!" level="INFO" doc:name="Logger"/>
    </flow>
    <flow name="Freshbooks_client" doc:name="Freshbooks_client">
        <http:inbound-endpoint exchange-pattern="one-way" host="localhost" port="8081" path="client" doc:name="HTTP"/>
        <scripting:transformer doc:name="Groovy">
            <scripting:script engine="Groovy">
                <scripting:text><![CDATA[import org.mule.modules.freshbooks.model.*

new WClient(
	client: new Client(
				firstName: "John",
			    lastName: "Doe",
                email: "testemail@testing.com"
)
)]]></scripting:text>
            </scripting:script>
        </scripting:transformer>
        <freshbooks:create-client config-ref="Freshbooks" doc:name="Freshbooks"/>
        <data-mapper:transform config-ref="Client" doc:name="DataMapper"/>
        <freshbooks:update-client config-ref="Freshbooks" doc:name="Freshbooks"/>
        <message-properties-transformer overwrite="true" scope="invocation" doc:name="Client properties">
            <add-message-property key="clientFirstName" value="#[payload.client.firstName]"/>
            <add-message-property key="clientId" value="#[payload.client.id]"/>
            <add-message-property key="clientEmail" value="#[payload.client.email]"/>
        </message-properties-transformer>
        <freshbooks:delete-client config-ref="Freshbooks" doc:name="Freshbooks"/>
        <logger message="Client #[groovy:message.getInvocationProperty('clientId')] #[groovy:message.getInvocationProperty('clientEmail')] created and deleted!" level="INFO" doc:name="Logger"/>
    </flow>
    <flow name="Freshbooks_invoice" doc:name="Freshbooks_invoice">
        <http:inbound-endpoint exchange-pattern="one-way" host="localhost" port="8081" path="invoice" doc:name="HTTP"/>
        <scripting:transformer doc:name="Groovy">
            <scripting:script engine="Groovy">
                <scripting:text><![CDATA[import org.mule.modules.freshbooks.model.*

new WInvoice(
	invoice: new Invoice(
				clientId: "10",
                lines: new Lines(
                            lines: [ new Line( quantity: 1,
                            		           unitCost: 4) ]
                )
)
)]]></scripting:text>
            </scripting:script>
        </scripting:transformer>
        <freshbooks:create-invoice config-ref="Freshbooks" doc:name="Freshbooks"/>
        <data-mapper:transform config-ref="Invoice" doc:name="DataMapper"/>
        <freshbooks:update-invoice config-ref="Freshbooks" doc:name="Freshbooks"/>
        <message-properties-transformer overwrite="true" scope="invocation" doc:name="Invoice properties">
            <add-message-property key="invoiceId" value="#[payload.invoice.id]"/>
            <add-message-property key="invoiceClientId" value="#[payload.invoice.clientId]"/>
        </message-properties-transformer>
        <freshbooks:delete-invoice config-ref="Freshbooks" doc:name="Freshbooks"/>
        <logger message="Invoice #[groovy:message.getInvocationProperty('invoiceId')] #[groovy:message.getInvocationProperty('invoiceClientId')] created and deleted!" level="INFO" doc:name="Logger"/>
    </flow>
    <flow name="Freshbooks_findClients" doc:name="Freshbooks_findClients">
        <http:inbound-endpoint exchange-pattern="one-way" host="localhost" port="8081" path="list-clients" doc:name="HTTP"/>
        <scripting:transformer doc:name="Groovy">
            <scripting:script engine="Groovy">
                <scripting:text><![CDATA[import org.mule.modules.freshbooks.model.*

new WClientRequest(
	clientRequest: new ClientRequest(
				folder: "ACTIVE"
)
)]]></scripting:text>
            </scripting:script>
        </scripting:transformer>
        <freshbooks:list-clients config-ref="Freshbooks" doc:name="Freshbooks"/>
        <foreach doc:name="Foreach">
            <logger message="Client: #[payload.id], #[payload.email]" level="INFO" doc:name="Logger"/>
        </foreach>
    </flow>
    <flow name="Freshbooks_findInvoices" doc:name="Freshbooks_findInvoices">
        <http:inbound-endpoint exchange-pattern="one-way" host="localhost" port="8081" path="list-invoices" doc:name="HTTP"/>
        <scripting:transformer doc:name="Groovy">
            <scripting:script engine="Groovy">
                <scripting:text><![CDATA[import org.mule.modules.freshbooks.model.*

new WInvoiceRequest(
	invoiceRequest: new InvoiceRequest(
				folder: "ACTIVE"
)
)]]></scripting:text>
            </scripting:script>
        </scripting:transformer>
        <freshbooks:list-invoices config-ref="Freshbooks" doc:name="Freshbooks"/>
        <foreach doc:name="Foreach">
            <logger message="Invoice: #[payload.id], #[payload.clientId]" level="INFO" doc:name="Logger"/>
        </foreach>
    </flow>
    <flow name="Freshbooks_deleteClient" doc:name="Freshbooks_deleteClient">
        <http:inbound-endpoint exchange-pattern="one-way" host="localhost" port="8081" path="delete-client" doc:name="HTTP"/>
        <scripting:transformer doc:name="Groovy">
            <scripting:script engine="Groovy">
                <scripting:text><![CDATA[import org.mule.modules.freshbooks.model.*

new WClient(
	client: new Client(
				id: "43"
)
)]]></scripting:text>
            </scripting:script>
        </scripting:transformer>
        <freshbooks:delete-client config-ref="Freshbooks" doc:name="Freshbooks"/>
    </flow>
</mule>
